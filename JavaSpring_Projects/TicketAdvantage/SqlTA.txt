-- Role: lambdauser

-- DROP ROLE lambdauser;

CREATE ROLE lambdauser LOGIN
  ENCRYPTED PASSWORD 'md58a06b053e834d2fd8872897128ae2ad7'
  SUPERUSER INHERIT CREATEDB NOCREATEROLE NOREPLICATION;

-- Role: scrapperuser

-- DROP ROLE scrapperuser;

CREATE ROLE scrapperuser LOGIN
  ENCRYPTED PASSWORD 'md508f0dd3bc4fc820cfb94950d76f363d0'
  SUPERUSER INHERIT CREATEDB NOCREATEROLE NOREPLICATION;

-- Role: tauser

-- DROP ROLE tauser;

CREATE ROLE tauser LOGIN
  ENCRYPTED PASSWORD 'md5eb586a986961dea4f3ba1cbf542450c5'
  SUPERUSER INHERIT CREATEDB NOCREATEROLE NOREPLICATION;

-- Role: uiuser

-- DROP ROLE uiuser;

CREATE ROLE uiuser LOGIN
  ENCRYPTED PASSWORD 'md59db71e8cd7cc47c6239b92985748ea6e'
  SUPERUSER INHERIT CREATEDB NOCREATEROLE NOREPLICATION;

-- Database: tadatabase

-- DROP DATABASE tadatabase;

CREATE DATABASE tadatabase
  WITH OWNER = tauser
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'en_US.UTF-8'
       LC_CTYPE = 'en_US.UTF-8'
       CONNECTION LIMIT = -1;

CREATE SEQUENCE public.accountevent_id_seq
    INCREMENT 1
    START 3456
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.accountevent_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.accounteventfinal_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.accounteventfinal_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.accountsta_id_seq
    INCREMENT 1
    START 35
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.accountsta_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.emailaccountsta_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.emailaccountsta_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.emailevent_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.emailevent_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.emailscrapper_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.emailscrapper_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.groupsta_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.groupsta_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.mlrecordevents_id_seq
    INCREMENT 1
    START 26
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.mlrecordevents_id_seq
    OWNER TO tauser;
	
CREATE SEQUENCE public.pendingevents_id_seq
    INCREMENT 1
    START 1775
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.pendingevents_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.scrapper_id_seq
    INCREMENT 1
    START 4
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.scrapper_id_seq
    OWNER TO postgres;

CREATE SEQUENCE public.spreadrecordevents_id_seq
    INCREMENT 1
    START 579
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.spreadrecordevents_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.totalrecordevents_id_seq
    INCREMENT 1
    START 614
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.totalrecordevents_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.userbilling_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.userbilling_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.usersta_id_seq
    INCREMENT 1
    START 5
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.usersta_id_seq
    OWNER TO tauser;

CREATE SEQUENCE public.webscrapper_id_seq
    INCREMENT 1
    START 30
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.webscrapper_id_seq
    OWNER TO tauser;

-- Table: public.accountevent

-- DROP TABLE public.accountevent;

CREATE TABLE public.accountevent
(
    id bigint NOT NULL DEFAULT nextval('accountevent_id_seq'::regclass),
    accountconfirmation character varying(4000) COLLATE pg_catalog."default",
    accounthtml text COLLATE pg_catalog."default",
    accountid bigint NOT NULL,
    amount character varying(20) COLLATE pg_catalog."default",
    actualamount character varying(20) COLLATE pg_catalog."default",
    attempts integer NOT NULL,
    attempttime timestamp with time zone,
    currentattempts integer,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    errorcode integer,
    errorexception character varying(4000) COLLATE pg_catalog."default",
    errormessage character varying(4000) COLLATE pg_catalog."default",
    eventdatetime timestamp with time zone NOT NULL,
    eventid integer,
    eventname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    groupid bigint NOT NULL,
    iscompleted boolean,
    maxspreadamount integer,
    maxtotalamount integer,
    maxmlamount integer,
    mlindicator character varying(10) COLLATE pg_catalog."default",
    timezone character varying(100) COLLATE pg_catalog."default",
    ml double precision,
    mlid bigint,
    mljuice double precision,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    ownerpercentage integer,
    partnerpercentage integer,
    proxy character varying(255) COLLATE pg_catalog."default",
    sport character varying(100) COLLATE pg_catalog."default" NOT NULL,
    spreadindicator character varying(10) COLLATE pg_catalog."default",
    spread double precision,
    spreadid bigint,
    spreadjuice double precision,
    total double precision,
    totalid bigint,
    totalindicator character varying(10) COLLATE pg_catalog."default",
    totaljuice double precision,
    type character varying(100) COLLATE pg_catalog."default" NOT NULL,
    userid bigint NOT NULL,
    wagertype character varying(10) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    riskamount character varying(20) COLLATE pg_catalog."default",
    towinamount character varying(20) COLLATE pg_catalog."default",
    eventresult character varying(20) COLLATE pg_catalog."default",
    eventresultamount numeric(10,2),
    accesstoken character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT accountevent_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.accountevent
    OWNER to tauser;

    GRANT ALL(id) ON public.accountevent TO PUBLIC;

    GRANT ALL(id) ON public.accountevent TO PUBLIC;

-- Index: accountevent_accountid_idx

-- DROP INDEX public.accountevent_accountid_idx;

CREATE INDEX accountevent_accountid_idx
    ON public.accountevent USING btree
    (accountid)
    TABLESPACE pg_default;

-- Index: accountevent_datecreated_idx

-- DROP INDEX public.accountevent_datecreated_idx;

CREATE INDEX accountevent_datecreated_idx
    ON public.accountevent USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: accountevent_userid_idx

-- DROP INDEX public.accountevent_userid_idx;

CREATE INDEX accountevent_userid_idx
    ON public.accountevent USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.accounteventfinal

-- DROP TABLE public.accounteventfinal;

CREATE TABLE public.accounteventfinal
(
  id bigint NOT NULL DEFAULT nextval('accounteventfinal_id_seq'::regclass),
  accounteventid bigint NOT NULL,
  rotation1 character varying(100),
  rotation2 character varying(100),
  rotation1team character varying(100),
  rotation2team character varying(100),
  rotation1score character varying(100),
  rotation2score character varying(100),
  outcomewin boolean,
  spreadindicator character varying(5),
  spreadnumber integer,
  spreadjuiceindicator character varying(5),
  spreadjuicenumber integer,
  totalindicator character varying(5),
  totalnumber integer,
  totaljuiceindicator character varying(5),
  totaljuicenumber integer,
  mlindicator character varying(5),
  mlnumber integer,
  CONSTRAINT accounteventfinal_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.accounteventfinal
  OWNER TO tauser;
GRANT SELECT(id), UPDATE(id), INSERT(id), REFERENCES(id) ON public.accounteventfinal TO public;


-- Index: public.accounteventfinal_accounteventid_idx

-- DROP INDEX public.accounteventfinal_accounteventid_idx;

CREATE INDEX accounteventfinal_accounteventid_idx
  ON public.accounteventfinal
  USING btree
  (accounteventid);

-- Table: public.accountsta

-- DROP TABLE public.accountsta;

CREATE TABLE public.accountsta
(
    id bigint NOT NULL DEFAULT nextval('accountsta_id_seq'::regclass),
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    isactive boolean NOT NULL,
    spreadlimitamount integer,
    totallimitamount integer,
    mllimitamount integer,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    timezone character varying(100) COLLATE pg_catalog."default",
    ownerpercentage integer,
    partnerpercentage integer,
    password character varying(100) COLLATE pg_catalog."default",
    proxylocation character varying(200) COLLATE pg_catalog."default",
    sitetype character varying(255) COLLATE pg_catalog."default",
    url character varying(200) COLLATE pg_catalog."default" NOT NULL,
    username character varying(100) COLLATE pg_catalog."default",
    ismobile boolean,
    showrequestresponse boolean,
    CONSTRAINT accountsta_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.accountsta
    OWNER to tauser;

    GRANT ALL(id) ON public.accountsta TO PUBLIC;

-- Index: accountsta_isactive_idx

-- DROP INDEX public.accountsta_isactive_idx;

CREATE INDEX accountsta_isactive_idx
    ON public.accountsta USING btree
    (isactive)
    TABLESPACE pg_default;

-- Index: accountsta_name_idx

-- DROP INDEX public.accountsta_name_idx;

CREATE INDEX accountsta_name_idx
    ON public.accountsta USING btree
    (name COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Table: public.emailaccountsta

-- DROP TABLE public.emailaccountsta;

CREATE TABLE public.emailaccountsta
(
    id bigint NOT NULL DEFAULT nextval('emailaccountsta_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    inet character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(50) COLLATE pg_catalog."default" NOT NULL,
    host character varying(50) COLLATE pg_catalog."default" NOT NULL,
    port character varying(6) COLLATE pg_catalog."default" NOT NULL,
    tls boolean NOT NULL,
    timezone character varying(50) COLLATE pg_catalog."default",
    sitetype character varying(50) COLLATE pg_catalog."default" NOT NULL,
    provider character varying(50) COLLATE pg_catalog."default" NOT NULL,
    emailtype character varying(20) COLLATE pg_catalog."default" NOT NULL,
    authenticationtype character varying(20) COLLATE pg_catalog."default",
    clientid character varying(200) COLLATE pg_catalog."default",
    clientsecret character varying(100) COLLATE pg_catalog."default",
    refreshtoken character varying(200) COLLATE pg_catalog."default",
    granttype character varying(50) COLLATE pg_catalog."default",
    isactive boolean NOT NULL,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    accountid character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT emailaccountsta_pkey PRIMARY KEY (id, name, address)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailaccountsta
    OWNER to tauser;

-- Table: public.emailevent

-- DROP TABLE public.emailevent;

CREATE TABLE public.emailevent
(
    id bigint NOT NULL DEFAULT nextval('emailevent_id_seq'::regclass),
    messagenum integer,
    emailname character varying(100) COLLATE pg_catalog."default",
    fromemail character varying(400) COLLATE pg_catalog."default",
    toemail character varying(400) COLLATE pg_catalog."default",
    ccemail character varying(400) COLLATE pg_catalog."default",
    bccemail character varying(400) COLLATE pg_catalog."default",
    subject character varying(400) COLLATE pg_catalog."default",
    bodytext character varying(4000) COLLATE pg_catalog."default",
    bodyhtml character varying(4000) COLLATE pg_catalog."default",
    inet character varying(50) COLLATE pg_catalog."default",
    datesent timestamp with time zone,
    datereceived timestamp with time zone,
    datecreated timestamp with time zone,
    datemodified timestamp with time zone,
    CONSTRAINT emailevent_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailevent
    OWNER to tauser;

    GRANT ALL(id) ON public.emailevent TO PUBLIC;

-- Index: emailevent_datecreated_idx

-- DROP INDEX public.emailevent_datecreated_idx;

CREATE INDEX emailevent_datecreated_idx
    ON public.emailevent USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: emailevent_messagenum_idx

-- DROP INDEX public.emailevent_messagenum_idx;

CREATE INDEX emailevent_messagenum_idx
    ON public.emailevent USING btree
    (messagenum)
    TABLESPACE pg_default;

-- Index: emailevent_subject_idx

-- DROP INDEX public.emailevent_subject_idx;

CREATE INDEX emailevent_subject_idx
    ON public.emailevent USING btree
    (subject COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Table: public.emailmiddledestinations

-- DROP TABLE public.emailmiddledestinations;

CREATE TABLE public.emailmiddledestinations
(
    emailid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT emailmiddledestinations_pkey PRIMARY KEY (emailid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailmiddledestinations
    OWNER to tauser;

    GRANT ALL(emailid) ON public.emailmiddledestinations TO PUBLIC;

-- Table: public.emailorderdestinations

-- DROP TABLE public.emailorderdestinations;

CREATE TABLE public.emailorderdestinations
(
    emailid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT emailorderdestinations_pkey PRIMARY KEY (emailid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailorderdestinations
    OWNER to tauser;

    GRANT ALL(emailid) ON public.emailorderdestinations TO PUBLIC;

-- Table: public.emailscrapper

-- DROP TABLE public.emailscrapper;

CREATE TABLE public.emailscrapper
(
    id bigint NOT NULL DEFAULT nextval('emailscrapper_id_seq'::regclass),
    userid bigint NOT NULL,
    scrappername character varying(100) COLLATE pg_catalog."default" NOT NULL,
    spreadlineadjustment character varying(10) COLLATE pg_catalog."default",
    spreadjuiceindicator character varying(10) COLLATE pg_catalog."default",
    spreadjuice character varying(10) COLLATE pg_catalog."default",
    spreadjuiceadjustment character varying(10) COLLATE pg_catalog."default",
    spreadmaxamount character varying(10) COLLATE pg_catalog."default",
    totallineadjustment character varying(10) COLLATE pg_catalog."default",
    totaljuiceindicator character varying(10) COLLATE pg_catalog."default",
    totaljuice character varying(10) COLLATE pg_catalog."default",
    totaljuiceadjustment character varying(10) COLLATE pg_catalog."default",
    totalmaxamount character varying(10) COLLATE pg_catalog."default",
    mlindicator character varying(10) COLLATE pg_catalog."default",
    mlline character varying(10) COLLATE pg_catalog."default",
    mllineadjustment character varying(10) COLLATE pg_catalog."default",
    mlmaxamount character varying(10) COLLATE pg_catalog."default",
    pullinginterval character varying(10) COLLATE pg_catalog."default",
    mobiletext character varying(50) COLLATE pg_catalog."default",
    telegramnumber character varying(12) COLLATE pg_catalog."default",
    middlerules boolean NOT NULL,
    onoff boolean NOT NULL,
    gameonoff boolean NOT NULL,
    firstonoff boolean NOT NULL,
    secondonoff boolean NOT NULL,
    thirdonoff boolean NOT NULL,
    nflspreadonoff boolean NOT NULL,
    nfltotalonoff boolean NOT NULL,
    nflmlonoff boolean NOT NULL,
    ncaafspreadonoff boolean NOT NULL,
    ncaaftotalonoff boolean NOT NULL,
    ncaafmlonoff boolean NOT NULL,
    nbaspreadonoff boolean NOT NULL,
    nbatotalonoff boolean NOT NULL,
    nbamlonoff boolean NOT NULL,
    ncaabspreadonoff boolean NOT NULL,
    ncaabtotalonoff boolean NOT NULL,
    ncaabmlonoff boolean NOT NULL,
    wnbaspreadonoff boolean NOT NULL,
    wnbatotalonoff boolean NOT NULL,
    wnbamlonoff boolean NOT NULL,
    nhlspreadonoff boolean NOT NULL,
    nhltotalonoff boolean NOT NULL,
    nhlmlonoff boolean NOT NULL,
    mlbspreadonoff boolean NOT NULL,
    mlbtotalonoff boolean NOT NULL,
    mlbmlonoff boolean NOT NULL,
    internationalbaseballspreadonoff boolean NOT NULL,
    internationalbaseballtotalonoff boolean NOT NULL,
    internationalbaseballmlonoff boolean NOT NULL,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    servernumber integer DEFAULT 2,
    enableretry boolean DEFAULT false,
    fullfill boolean DEFAULT false,
    orderamount integer DEFAULT 0,
    CONSTRAINT emailscrapper_pkey PRIMARY KEY (id, scrappername, userid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailscrapper
    OWNER to tauser;

    GRANT ALL(id) ON public.emailscrapper TO PUBLIC;

-- Index: emailscrapper_name_idx

-- DROP INDEX public.emailscrapper_name_idx;

CREATE INDEX emailscrapper_name_idx
    ON public.emailscrapper USING btree
    (scrappername COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Index: emailscrapper_userid_idx

-- DROP INDEX public.emailscrapper_userid_idx;

CREATE INDEX emailscrapper_userid_idx
    ON public.emailscrapper USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.emailscrapperdestinations

-- DROP TABLE public.emailscrapperdestinations;

CREATE TABLE public.emailscrapperdestinations
(
    emailid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT emailscrapperdestinations_pkey PRIMARY KEY (emailid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailscrapperdestinations
    OWNER to tauser;

    GRANT ALL(emailid) ON public.emailscrapperdestinations TO PUBLIC;

-- Table: public.emailscrappersources

-- DROP TABLE public.emailscrappersources;

CREATE TABLE public.emailscrappersources
(
    emailid bigint NOT NULL,
    emailaccountsid bigint NOT NULL,
    CONSTRAINT emailscrappersources_pkey PRIMARY KEY (emailid, emailaccountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.emailscrappersources
    OWNER to tauser;

    GRANT ALL(emailid) ON public.emailscrappersources TO PUBLIC;

-- Table: public.groupsaccounts

-- DROP TABLE public.groupsaccounts;

CREATE TABLE public.groupsaccounts
(
    groupsid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT groupsaccounts_pkey PRIMARY KEY (groupsid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.groupsaccounts
    OWNER to tauser;

    GRANT ALL(groupsid) ON public.groupsaccounts TO PUBLIC;

-- Table: public.groupsta

-- DROP TABLE public.groupsta;

CREATE TABLE public.groupsta
(
  id bigint NOT NULL DEFAULT nextval('groupsta_id_seq'::regclass),
  datecreated timestamp with time zone NOT NULL,
  datemodified timestamp with time zone NOT NULL,
  isactive boolean NOT NULL,
  name character varying(100) NOT NULL,
  CONSTRAINT groupsta_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.groupsta
  OWNER TO tauser;
GRANT SELECT(id), UPDATE(id), INSERT(id), REFERENCES(id) ON public.groupsta TO public;

-- Index: public.groupsta_isactive_idx

-- DROP INDEX public.groupsta_isactive_idx;

CREATE INDEX groupsta_isactive_idx
  ON public.groupsta
  USING btree
  (isactive);

-- Index: public.groupsta_name_idx

-- DROP INDEX public.groupsta_name_idx;

CREATE INDEX groupsta_name_idx
  ON public.groupsta
  USING btree
  (name COLLATE pg_catalog."default");

-- Table: public.hibernate_sequences

-- DROP TABLE public.hibernate_sequences;

CREATE TABLE public.hibernate_sequences
(
  sequence_name character varying(255),
  sequence_next_hi_value integer
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.hibernate_sequences
  OWNER TO tauser;
GRANT SELECT(sequence_name), UPDATE(sequence_name), INSERT(sequence_name), REFERENCES(sequence_name) ON public.hibernate_sequences TO public;

-- Table: public.middledestinations

-- DROP TABLE public.middledestinations;

CREATE TABLE public.middledestinations
(
    scrapperid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT middledestinations_pkey PRIMARY KEY (scrapperid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.middledestinations
    OWNER to tauser;

    GRANT ALL(scrapperid) ON public.middledestinations TO PUBLIC;

-- Table: public.mlrecordevents

-- DROP TABLE public.mlrecordevents;

CREATE TABLE public.mlrecordevents
(
    id bigint NOT NULL DEFAULT nextval('mlrecordevents_id_seq'::regclass),
    accountid bigint,
    amount character varying(10) COLLATE pg_catalog."default",
    attempts integer NOT NULL,
    attempttime timestamp with time zone,
    currentattempts integer,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone,
    datentime timestamp with time zone NOT NULL,
    eventdatetime timestamp with time zone,
    eventid integer NOT NULL,
    eventid1 integer,
    eventid2 integer,
    eventname character varying(100) COLLATE pg_catalog."default",
    eventteam1 character varying(100) COLLATE pg_catalog."default",
    eventteam2 character varying(100) COLLATE pg_catalog."default",
    eventtype character varying(100) COLLATE pg_catalog."default" NOT NULL,
    groupid bigint,
    iscompleted boolean NOT NULL,
    sport character varying(100) COLLATE pg_catalog."default" NOT NULL,
    userid bigint NOT NULL,
    wtype character varying(10) COLLATE pg_catalog."default",
    mlinputfirstone character varying(255) COLLATE pg_catalog."default",
    mlinputfirsttwo character varying(255) COLLATE pg_catalog."default",
    mlinputsecondone character varying(255) COLLATE pg_catalog."default",
    mlinputsecondtwo character varying(255) COLLATE pg_catalog."default",
    mlplusminusfirstone character varying(255) COLLATE pg_catalog."default",
    mlplusminusfirsttwo character varying(255) COLLATE pg_catalog."default",
    mlplusminussecondone character varying(255) COLLATE pg_catalog."default",
    mlplusminussecondtwo character varying(255) COLLATE pg_catalog."default",
    scrappername character varying(100) COLLATE pg_catalog."default",
    actiontype character varying(10) COLLATE pg_catalog."default",
    textnumber character varying(40) COLLATE pg_catalog."default",
    rotationid integer,
    CONSTRAINT mlrecordevents_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.mlrecordevents
    OWNER to tauser;

    GRANT ALL(id) ON public.mlrecordevents TO PUBLIC;

-- Index: mlrecordevents_datecreated_idx

-- DROP INDEX public.mlrecordevents_datecreated_idx;

CREATE INDEX mlrecordevents_datecreated_idx
    ON public.mlrecordevents USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: mlrecordevents_datentime_idx

-- DROP INDEX public.mlrecordevents_datentime_idx;

CREATE INDEX mlrecordevents_datentime_idx
    ON public.mlrecordevents USING btree
    (datentime)
    TABLESPACE pg_default;

-- Index: mlrecordevents_eventdatetime_idx

-- DROP INDEX public.mlrecordevents_eventdatetime_idx;

CREATE INDEX mlrecordevents_eventdatetime_idx
    ON public.mlrecordevents USING btree
    (eventdatetime)
    TABLESPACE pg_default;

-- Index: mlrecordevents_eventid_idx

-- DROP INDEX public.mlrecordevents_eventid_idx;

CREATE INDEX mlrecordevents_eventid_idx
    ON public.mlrecordevents USING btree
    (eventid)
    TABLESPACE pg_default;

-- Index: mlrecordevents_userid_idx

-- DROP INDEX public.mlrecordevents_userid_idx;

CREATE INDEX mlrecordevents_userid_idx
    ON public.mlrecordevents USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.orderdestinations

-- DROP TABLE public.orderdestinations;

CREATE TABLE public.orderdestinations
(
    scrapperid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT orderdestinations_pkey PRIMARY KEY (scrapperid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.orderdestinations
    OWNER to tauser;

-- Table: public.pendingevents

-- DROP TABLE public.pendingevents;

CREATE TABLE public.pendingevents
(
    id bigint NOT NULL DEFAULT nextval('pendingevents_id_seq'::regclass),
    userid bigint NOT NULL,
    ticketnum character varying(20) COLLATE pg_catalog."default" NOT NULL,
    eventtype character varying(10) COLLATE pg_catalog."default",
    linetype character varying(20) COLLATE pg_catalog."default",
    eventdate character varying(80) COLLATE pg_catalog."default",
    gamesport character varying(80) COLLATE pg_catalog."default",
    gametype character varying(80) COLLATE pg_catalog."default",
    team character varying(100) COLLATE pg_catalog."default",
    rotationid character varying(10) COLLATE pg_catalog."default",
    line character varying(20) COLLATE pg_catalog."default",
    lineplusminus character varying(10) COLLATE pg_catalog."default",
    juice character varying(10) COLLATE pg_catalog."default",
    juiceplusminus character varying(10) COLLATE pg_catalog."default",
    risk character varying(20) COLLATE pg_catalog."default",
    win character varying(20) COLLATE pg_catalog."default",
    pendingtype character varying(10) COLLATE pg_catalog."default",
    accountname character varying(200) COLLATE pg_catalog."default",
    accountid character varying(100) COLLATE pg_catalog."default",
    doposturl boolean,
    posturl character varying(255) COLLATE pg_catalog."default",
    customerid character varying(200) COLLATE pg_catalog."default",
    inet character varying(200) COLLATE pg_catalog."default",
    dateaccepted character varying(50) COLLATE pg_catalog."default",
    datecreated timestamp with time zone,
    datemodified timestamp with time zone,
    gamedate timestamp with time zone,
    CONSTRAINT pendingevents_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.pendingevents
    OWNER to tauser;

    GRANT ALL(id) ON public.pendingevents TO PUBLIC;

-- Index: pendingevents_datecreated_idx

-- DROP INDEX public.pendingevents_datecreated_idx;

CREATE INDEX pendingevents_datecreated_idx
    ON public.pendingevents USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: pendingevents_pendingtype_idx

-- DROP INDEX public.pendingevents_pendingtype_idx;

CREATE INDEX pendingevents_pendingtype_idx
    ON public.pendingevents USING btree
    (pendingtype COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Index: pendingevents_ticketnum_idx

-- DROP INDEX public.pendingevents_ticketnum_idx;

CREATE INDEX pendingevents_ticketnum_idx
    ON public.pendingevents USING btree
    (ticketnum COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Index: pendingevents_userid_idx

-- DROP INDEX public.pendingevents_userid_idx;

CREATE INDEX pendingevents_userid_idx
    ON public.pendingevents USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.scrapperdestinations

-- DROP TABLE public.scrapperdestinations;

CREATE TABLE public.scrapperdestinations
(
    scrapperid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT scrapperdestinations_pkey PRIMARY KEY (scrapperid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.scrapperdestinations
    OWNER to tauser;

    GRANT ALL(scrapperid) ON public.scrapperdestinations TO PUBLIC;

-- Table: public.scrappersources

-- DROP TABLE public.scrappersources;

CREATE TABLE public.scrappersources
(
    scrapperid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT scrappersources_pkey PRIMARY KEY (scrapperid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.scrappersources
    OWNER to tauser;

    GRANT ALL(scrapperid) ON public.scrappersources TO PUBLIC;

-- Table: public.spreadrecordevents

-- DROP TABLE public.spreadrecordevents;

CREATE TABLE public.spreadrecordevents
(
    id bigint NOT NULL DEFAULT nextval('spreadrecordevents_id_seq'::regclass),
    accountid bigint,
    amount character varying(10) COLLATE pg_catalog."default",
    attempts integer NOT NULL,
    attempttime timestamp with time zone,
    currentattempts integer,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone,
    datentime timestamp with time zone NOT NULL,
    eventdatetime timestamp with time zone NOT NULL,
    eventid integer NOT NULL,
    eventid1 integer,
    eventid2 integer,
    eventname character varying(100) COLLATE pg_catalog."default",
    eventteam1 character varying(100) COLLATE pg_catalog."default",
    eventteam2 character varying(100) COLLATE pg_catalog."default",
    eventtype character varying(100) COLLATE pg_catalog."default" NOT NULL,
    groupid bigint,
    iscompleted boolean NOT NULL,
    sport character varying(100) COLLATE pg_catalog."default" NOT NULL,
    userid bigint NOT NULL,
    wtype character varying(10) COLLATE pg_catalog."default",
    spreadinputfirstone character varying(255) COLLATE pg_catalog."default",
    spreadinputfirsttwo character varying(255) COLLATE pg_catalog."default",
    spreadinputjuicefirstone character varying(255) COLLATE pg_catalog."default",
    spreadinputjuicefirsttwo character varying(255) COLLATE pg_catalog."default",
    spreadinputjuicesecondone character varying(255) COLLATE pg_catalog."default",
    spreadinputjuicesecondtwo character varying(255) COLLATE pg_catalog."default",
    spreadinputsecondone character varying(255) COLLATE pg_catalog."default",
    spreadinputsecondtwo character varying(255) COLLATE pg_catalog."default",
    spreadjuiceplusminusfirstone character varying(255) COLLATE pg_catalog."default",
    spreadjuiceplusminusfirsttwo character varying(255) COLLATE pg_catalog."default",
    spreadjuiceplusminussecondone character varying(255) COLLATE pg_catalog."default",
    spreadjuiceplusminussecondtwo character varying(255) COLLATE pg_catalog."default",
    spreadplusminusfirstone character varying(255) COLLATE pg_catalog."default",
    spreadplusminusfirsttwo character varying(255) COLLATE pg_catalog."default",
    spreadplusminussecondone character varying(255) COLLATE pg_catalog."default",
    spreadplusminussecondtwo character varying(255) COLLATE pg_catalog."default",
    scrappername character varying(100) COLLATE pg_catalog."default",
    actiontype character varying(10) COLLATE pg_catalog."default",
    textnumber character varying(40) COLLATE pg_catalog."default",
    rotationid integer,
    CONSTRAINT spreadrecordevents_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.spreadrecordevents
    OWNER to tauser;

    GRANT ALL(id) ON public.spreadrecordevents TO PUBLIC;

-- Index: spreadrecordevents_datecreated_idx

-- DROP INDEX public.spreadrecordevents_datecreated_idx;

CREATE INDEX spreadrecordevents_datecreated_idx
    ON public.spreadrecordevents USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: spreadrecordevents_datentime_idx

-- DROP INDEX public.spreadrecordevents_datentime_idx;

CREATE INDEX spreadrecordevents_datentime_idx
    ON public.spreadrecordevents USING btree
    (datentime)
    TABLESPACE pg_default;

-- Index: spreadrecordevents_eventdatetime_idx

-- DROP INDEX public.spreadrecordevents_eventdatetime_idx;

CREATE INDEX spreadrecordevents_eventdatetime_idx
    ON public.spreadrecordevents USING btree
    (eventdatetime)
    TABLESPACE pg_default;

-- Index: spreadrecordevents_eventid_idx

-- DROP INDEX public.spreadrecordevents_eventid_idx;

CREATE INDEX spreadrecordevents_eventid_idx
    ON public.spreadrecordevents USING btree
    (eventid)
    TABLESPACE pg_default;

-- Index: spreadrecordevents_userid_idx

-- DROP INDEX public.spreadrecordevents_userid_idx;

CREATE INDEX spreadrecordevents_userid_idx
    ON public.spreadrecordevents USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.totalrecordevents

-- DROP TABLE public.totalrecordevents;

CREATE TABLE public.totalrecordevents
(
    id bigint NOT NULL DEFAULT nextval('totalrecordevents_id_seq'::regclass),
    accountid bigint,
    amount character varying(10) COLLATE pg_catalog."default",
    attempts integer NOT NULL,
    attempttime timestamp with time zone,
    currentattempts integer,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone,
    datentime timestamp with time zone NOT NULL,
    eventdatetime timestamp with time zone NOT NULL,
    eventid integer NOT NULL,
    eventid1 integer,
    eventid2 integer,
    eventname character varying(100) COLLATE pg_catalog."default",
    eventteam1 character varying(100) COLLATE pg_catalog."default",
    eventteam2 character varying(100) COLLATE pg_catalog."default",
    eventtype character varying(100) COLLATE pg_catalog."default" NOT NULL,
    groupid bigint,
    iscompleted boolean NOT NULL,
    sport character varying(100) COLLATE pg_catalog."default" NOT NULL,
    userid bigint NOT NULL,
    wtype character varying(10) COLLATE pg_catalog."default",
    totalinputfirstone character varying(255) COLLATE pg_catalog."default",
    totalinputfirsttwo character varying(255) COLLATE pg_catalog."default",
    totalinputjuicefirstone character varying(255) COLLATE pg_catalog."default",
    totalinputjuicefirsttwo character varying(255) COLLATE pg_catalog."default",
    totalinputjuicesecondone character varying(255) COLLATE pg_catalog."default",
    totalinputjuicesecondtwo character varying(255) COLLATE pg_catalog."default",
    totalinputsecondone character varying(255) COLLATE pg_catalog."default",
    totalinputsecondtwo character varying(255) COLLATE pg_catalog."default",
    totaljuiceplusminusfirstone character varying(255) COLLATE pg_catalog."default",
    totaljuiceplusminusfirsttwo character varying(255) COLLATE pg_catalog."default",
    totaljuiceplusminussecondone character varying(255) COLLATE pg_catalog."default",
    totaljuiceplusminussecondtwo character varying(255) COLLATE pg_catalog."default",
    scrappername character varying(100) COLLATE pg_catalog."default",
    actiontype character varying(10) COLLATE pg_catalog."default",
    textnumber character varying(40) COLLATE pg_catalog."default",
    rotationid integer,
    CONSTRAINT totalrecordevents_pkey PRIMARY KEY (id, datecreated, datentime, eventdatetime, eventid, userid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.totalrecordevents
    OWNER to tauser;

    GRANT ALL(id) ON public.totalrecordevents TO PUBLIC;

-- Index: totalrecordevents_datecreated_idx

-- DROP INDEX public.totalrecordevents_datecreated_idx;

CREATE INDEX totalrecordevents_datecreated_idx
    ON public.totalrecordevents USING btree
    (datecreated)
    TABLESPACE pg_default;

-- Index: totalrecordevents_datentime_idx

-- DROP INDEX public.totalrecordevents_datentime_idx;

CREATE INDEX totalrecordevents_datentime_idx
    ON public.totalrecordevents USING btree
    (datentime)
    TABLESPACE pg_default;

-- Index: totalrecordevents_eventdatetime_idx

-- DROP INDEX public.totalrecordevents_eventdatetime_idx;

CREATE INDEX totalrecordevents_eventdatetime_idx
    ON public.totalrecordevents USING btree
    (eventdatetime)
    TABLESPACE pg_default;

-- Index: totalrecordevents_eventid_idx

-- DROP INDEX public.totalrecordevents_eventid_idx;

CREATE INDEX totalrecordevents_eventid_idx
    ON public.totalrecordevents USING btree
    (eventid)
    TABLESPACE pg_default;

-- Index: totalrecordevents_userid_idx

-- DROP INDEX public.totalrecordevents_userid_idx;

CREATE INDEX totalrecordevents_userid_idx
    ON public.totalrecordevents USING btree
    (userid)
    TABLESPACE pg_default;

-- Table: public.userbilling

-- DROP TABLE public.userbilling;

CREATE TABLE public.userbilling
(
    id bigint NOT NULL DEFAULT nextval('userbilling_id_seq'::regclass),
    userid bigint NOT NULL,
    weekstartdate date NOT NULL,
    accountrate numeric(8,2),
    ispaid boolean NOT NULL,
    weeklybalance numeric(8,2),
    numberofaccounts integer NOT NULL DEFAULT 0,
    CONSTRAINT userbilling_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.userbilling
    OWNER to tauser;

    GRANT ALL(id) ON public.userbilling TO PUBLIC;

-- Index: userbilling_userid_idx

-- DROP INDEX public.userbilling_userid_idx;

CREATE INDEX userbilling_userid_idx
    ON public.userbilling USING btree
    (userid)
    TABLESPACE pg_default;

-- Index: userbilling_week_idx

-- DROP INDEX public.userbilling_week_idx;

CREATE INDEX userbilling_week_idx
    ON public.userbilling USING btree
    (weekstartdate)
    TABLESPACE pg_default;

-- Table: public.usersaccounts

-- DROP TABLE public.usersaccounts;

CREATE TABLE public.usersaccounts
(
    usersid bigint NOT NULL,
    accountsid bigint NOT NULL,
    CONSTRAINT usersaccounts_pkey PRIMARY KEY (usersid, accountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usersaccounts
    OWNER to tauser;

    GRANT ALL(usersid) ON public.usersaccounts TO PUBLIC;

-- Table: public.usersemailaccounts

-- DROP TABLE public.usersemailaccounts;

CREATE TABLE public.usersemailaccounts
(
    usersid bigint NOT NULL,
    emailaccountsid bigint NOT NULL,
    CONSTRAINT usersemailaccounts_pkey PRIMARY KEY (usersid, emailaccountsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usersemailaccounts
    OWNER to tauser;

    GRANT ALL(usersid) ON public.usersemailaccounts TO PUBLIC;

-- Table: public.usersgroups

-- DROP TABLE public.usersgroups;

CREATE TABLE public.usersgroups
(
    usersid bigint NOT NULL,
    groupsid bigint NOT NULL,
    CONSTRAINT usersgroups_pkey PRIMARY KEY (usersid, groupsid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usersgroups
    OWNER to tauser;

    GRANT ALL(usersid) ON public.usersgroups TO PUBLIC;

-- Table: public.usersta

-- DROP TABLE public.usersta;

CREATE TABLE public.usersta
(
    id bigint NOT NULL DEFAULT nextval('usersta_id_seq'::regclass),
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    email character varying(100) COLLATE pg_catalog."default",
    isactive boolean NOT NULL,
    mobilenumber character varying(16) COLLATE pg_catalog."default",
    password character varying(50) COLLATE pg_catalog."default",
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT usersta_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usersta
    OWNER to tauser;

    GRANT ALL(id) ON public.usersta TO PUBLIC;

    GRANT ALL(id) ON public.usersta TO PUBLIC;

-- Index: usersta_isactive_idx

-- DROP INDEX public.usersta_isactive_idx;

CREATE INDEX usersta_isactive_idx
    ON public.usersta USING btree
    (isactive)
    TABLESPACE pg_default;

-- Index: usersta_username_idx

-- DROP INDEX public.usersta_username_idx;

CREATE INDEX usersta_username_idx
    ON public.usersta USING btree
    (username COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Table: public.webscrapper

-- DROP TABLE public.webscrapper;

CREATE TABLE public.webscrapper
(
    id bigint NOT NULL DEFAULT nextval('webscrapper_id_seq'::regclass),
    userid bigint NOT NULL,
    scrappername character varying(100) COLLATE pg_catalog."default" NOT NULL,
    spreadlineadjustment character varying(10) COLLATE pg_catalog."default",
    spreadjuiceindicator character varying(10) COLLATE pg_catalog."default",
    spreadjuice character varying(10) COLLATE pg_catalog."default",
    spreadjuiceadjustment character varying(10) COLLATE pg_catalog."default",
    spreadmaxamount character varying(10) COLLATE pg_catalog."default",
    totallineadjustment character varying(10) COLLATE pg_catalog."default",
    totaljuiceindicator character varying(10) COLLATE pg_catalog."default",
    totaljuice character varying(10) COLLATE pg_catalog."default",
    totaljuiceadjustment character varying(10) COLLATE pg_catalog."default",
    totalmaxamount character varying(10) COLLATE pg_catalog."default",
    mlindicator character varying(10) COLLATE pg_catalog."default",
    mlline character varying(10) COLLATE pg_catalog."default",
    mllineadjustment character varying(10) COLLATE pg_catalog."default",
    mlmaxamount character varying(10) COLLATE pg_catalog."default",
    pullinginterval character varying(10) COLLATE pg_catalog."default",
    mobiletext character varying(50) COLLATE pg_catalog."default",
    telegramnumber character varying(12) COLLATE pg_catalog."default",
    middlerules boolean,
    gameonoff boolean NOT NULL,
    firstonoff boolean NOT NULL,
    secondonoff boolean NOT NULL,
    thirdonoff boolean NOT NULL,
    nflspreadonoff boolean NOT NULL,
    nfltotalonoff boolean NOT NULL,
    nflmlonoff boolean NOT NULL,
    ncaafspreadonoff boolean NOT NULL,
    ncaaftotalonoff boolean NOT NULL,
    ncaafmlonoff boolean NOT NULL,
    nbaspreadonoff boolean NOT NULL,
    nbatotalonoff boolean NOT NULL,
    nbamlonoff boolean NOT NULL,
    ncaabspreadonoff boolean NOT NULL,
    ncaabtotalonoff boolean NOT NULL,
    ncaabmlonoff boolean NOT NULL,
    wnbaspreadonoff boolean NOT NULL,
    wnbatotalonoff boolean NOT NULL,
    wnbamlonoff boolean NOT NULL,
    nhlspreadonoff boolean NOT NULL,
    nhltotalonoff boolean NOT NULL,
    nhlmlonoff boolean NOT NULL,
    mlbspreadonoff boolean NOT NULL,
    mlbtotalonoff boolean NOT NULL,
    mlbmlonoff boolean NOT NULL,
    onoff boolean NOT NULL,
    internationalbaseballspreadonoff boolean NOT NULL DEFAULT true,
    internationalbaseballtotalonoff boolean NOT NULL DEFAULT true,
    internationalbaseballmlonoff boolean NOT NULL DEFAULT true,
    datecreated timestamp with time zone NOT NULL,
    datemodified timestamp with time zone NOT NULL,
    servernumber integer DEFAULT 2,
    enableretry boolean DEFAULT false,
    fullfill boolean DEFAULT false,
    orderamount integer DEFAULT 0,
    CONSTRAINT webscrapper_pkey PRIMARY KEY (id, scrappername, userid)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.webscrapper
    OWNER to tauser;

    GRANT ALL(id) ON public.webscrapper TO PUBLIC;

-- Index: webscrapper_name_idx

-- DROP INDEX public.webscrapper_name_idx;

CREATE INDEX webscrapper_name_idx
    ON public.webscrapper USING btree
    (scrappername COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Index: webscrapper_userid_idx

-- DROP INDEX public.webscrapper_userid_idx;

CREATE INDEX webscrapper_userid_idx
    ON public.webscrapper USING btree
    (userid)
    TABLESPACE pg_default;