/**
 * 
 */
package com.ticketadvantage.services.db;

import org.apache.log4j.Logger;

import com.ticketadvantage.services.dao.sites.sportsinsights.SportsInsightsSite;
import com.ticketadvantage.services.errorhandling.BatchException;
import com.ticketadvantage.services.model.EventPackage;
import com.ticketadvantage.services.model.EventsPackage;

/**
 * @author jmiller
 *
 */
public class EventsDB extends BaseDB {
	private static final Logger LOGGER = Logger.getLogger(EventsDB.class);
	private SportsInsightsSite sportsInsightSite = new SportsInsightsSite("https://sportsinsights.actionnetwork.com", "mojaxsventures@gmail.com", "Jaxson17");

	/**
	 * 
	 */
	public EventsDB() {
		super();
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
	}

	/**
	 * 
	 * @param searchString
	 * @return
	 */
	public EventsPackage findEvents(String searchString) {
		LOGGER.info("Entering findEvents()");
		LOGGER.debug("searchString: " + searchString);
		final EventsPackage ep = new EventsPackage();

		try {
			EventsPackage eventsPackage = sportsInsightSite.getAllSports(); 
			for (EventPackage eventPackage : eventsPackage.getEvents()) {
				LOGGER.debug("EventPackage: " + eventPackage);
	
				// Check if string is in any of the packages
				if (eventPackage.search().contains(searchString)) {
					ep.addEvent(eventPackage);
				}
			}
		} catch (BatchException be) {
			LOGGER.debug(be);
		}

		LOGGER.debug("EventsPackage: " + ep);
		LOGGER.info("Exiting findEvents()");
		return ep;
	}

	/**
	 * 
	 * @return
	 */
	public EventsPackage getAllEvents() {
		LOGGER.info("Entering getAllEvents()");
		EventsPackage eventsPackage = null;

		try {
			eventsPackage = sportsInsightSite.forceGetAllSports(); 
		} catch (BatchException be) {
			LOGGER.error(be);
		}

//		LOGGER.debug("EventsPackage: " + eventsPackage);
		LOGGER.info("Exiting getAllEvents()");
		return eventsPackage;
	}

	/**
	 * 
	 * @param sport
	 * @return
	 */
	public EventsPackage getSport(String sport) {
		LOGGER.info("Entering getSport()");
		EventsPackage eventsPackage = null;

		try {
			eventsPackage = sportsInsightSite.getSport(sport); 
		} catch (BatchException be) {
			LOGGER.error(be);
		}

		LOGGER.debug("EventsPackage: " + eventsPackage);
		LOGGER.info("Exiting getSport()");
		return eventsPackage;
	}

	/**
	 * 
	 * @param sport
	 * @return
	 */
	public EventsPackage getNextDaySport(String sport) {
		LOGGER.info("Entering getNextDaySport()");
		EventsPackage eventsPackage = null;

		try {
			eventsPackage = sportsInsightSite.getNextDaySport(sport); 
		} catch (BatchException be) {
			LOGGER.error(be);
		}

		LOGGER.debug("EventsPackage: " + eventsPackage);
		LOGGER.info("Exiting getNextDaySport()");
		return eventsPackage;
	}
}